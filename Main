local ESP = {}

if getgenv().ESP then
    getgenv().ESP:Disable()
end
getgenv().ESP = ESP

ESP.Settings = {
    Enabled = false,
    Tracers = true,
    Boxes = true,
    HealthBars = true,
    Position = "Middle",
    BoxColor = Color3.fromRGB(255, 255, 255),
    TracerColor = Color3.fromRGB(255, 255, 255),
    HealthBarColor = Color3.fromRGB(0, 255, 0)
}

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local ESPObjects = {}

local function ClearESP()
    for _, v in pairs(ESPObjects) do
        if v then
            v.Text:Remove()
            v.Tracer:Remove()
            v.Box:Remove()
            v.HealthBar:Remove()
        end
    end
    ESPObjects = {}
end

local function CreateESP(plr)
    if plr == Players.LocalPlayer then return end -- Exclude local player

    local objects = {
        Text = Drawing.new("Text"),
        Tracer = Drawing.new("Line"),
        Box = Drawing.new("Square"),
        HealthBar = Drawing.new("Line")
    }

    objects.Text.Size = 14
    objects.Text.Center = true
    objects.Text.Outline = true
    objects.Text.Color = Color3.fromRGB(255, 255, 255)
    objects.Text.Transparency = 0.7
    objects.Text.Font = Drawing.Fonts.UI

    objects.Tracer.Thickness = 1
    objects.Tracer.Color = ESP.Settings.TracerColor

    objects.Box.Thickness = 1
    objects.Box.Color = ESP.Settings.BoxColor
    objects.Box.Filled = false

    objects.HealthBar.Thickness = 2
    objects.HealthBar.Color = ESP.Settings.HealthBarColor

    ESPObjects[plr] = objects
end

local function UpdateESP()
    if not ESP.Settings.Enabled then
        for _, v in pairs(ESPObjects) do
            v.Text.Visible = false
            v.Tracer.Visible = false
            v.Box.Visible = false
            v.HealthBar.Visible = false
        end
        return
    end

    for plr, v in pairs(ESPObjects) do
        local char = workspace:FindFirstChild(plr.Name) or plr.Character
        if char and char:FindFirstChild("HumanoidRootPart") and char:FindFirstChild("Humanoid") and char:FindFirstChild("Head") then
            local hrp = char.HumanoidRootPart
            local humanoid = char.Humanoid
            local head = char.Head

            local pos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
            local headpos = Camera:WorldToViewportPoint(head.Position)
            local footpos = Camera:WorldToViewportPoint(hrp.Position - Vector3.new(0, 3, 0))

            local boxHeight = math.abs(footpos.Y - headpos.Y)
            local boxWidth = boxHeight / 2
            local yOffset = (ESP.Settings.Position == "Middle" and -boxHeight / 2) or (ESP.Settings.Position == "Top" and -boxHeight) or 0

            if onScreen then
                local dist = (Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")) and (hrp.Position - Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude or 0
                v.Text.Position = Vector2.new(math.floor(pos.X), math.floor(pos.Y - 25))
                v.Text.Text = "(" .. math.floor(dist) .. ") " .. plr.Name .. " [" .. math.floor(humanoid.Health) .. "/" .. math.floor(humanoid.MaxHealth) .. "]"

                v.Tracer.From = Vector2.new(math.floor(Camera.ViewportSize.X / 2), math.floor(Camera.ViewportSize.Y))
                v.Tracer.To = Vector2.new(math.floor(pos.X), math.floor(pos.Y + 5))

                v.Box.Position = Vector2.new(math.floor(pos.X - boxWidth / 2), math.floor(headpos.Y + yOffset))
                v.Box.Size = Vector2.new(math.floor(boxWidth), math.floor(boxHeight))

                v.HealthBar.From = Vector2.new(math.floor(pos.X - boxWidth / 2 - 4), math.floor(headpos.Y + boxHeight))
                v.HealthBar.To = Vector2.new(math.floor(pos.X - boxWidth / 2 - 4), math.floor(headpos.Y + boxHeight * (humanoid.Health / humanoid.MaxHealth)))

                v.Text.Visible = ESP.Settings.Enabled
                v.Tracer.Visible = ESP.Settings.Tracers
                v.Box.Visible = ESP.Settings.Boxes
                v.HealthBar.Visible = ESP.Settings.HealthBars
            else
                v.Text.Visible = false
                v.Tracer.Visible = false
                v.Box.Visible = false
                v.HealthBar.Visible = false
            end
        else
            v.Text.Visible = false
            v.Tracer.Visible = false
            v.Box.Visible = false
            v.HealthBar.Visible = false
        end
    end
end

function ESP:Enable()
    ClearESP()
    ESP.Settings.Enabled = true

    for _, v in pairs(Players:GetPlayers()) do
        CreateESP(v)
    end

    Players.PlayerAdded:Connect(function(v)
        CreateESP(v)
    end)
end

function ESP:Disable()
    ESP.Settings.Enabled = false
    ClearESP()
end

function ESP:Tracers(state)
    ESP.Settings.Tracers = state
end

function ESP:Boxes(state)
    ESP.Settings.Boxes = state
end

function ESP:HealthBars(state)
    ESP.Settings.HealthBars = state
end

function ESP:SetBoxColor(c)
    ESP.Settings.BoxColor = c
end

function ESP:SetTracerColor(c)
    ESP.Settings.TracerColor = c
end

function ESP:SetHealthBarColor(c)
    ESP.Settings.HealthBarColor = c
end

function ESP:SetPosition(p)
    ESP.Settings.Position = p
end

RunService.RenderStepped:Connect(UpdateESP)

return ESP
